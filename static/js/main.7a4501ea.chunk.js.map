{"version":3,"sources":["components/Answer.tsx","components/Question.tsx","components/Context.tsx","index.tsx"],"names":["Answer","index","selected","answer","onclick","answered","isCorrectAnswer","onClick","className","Question","props","useState","setSelected","setAnswered","question","answers","correctAnswer","feedback","setCorrectAnswers","correctAnswers","questionsAnswered","setQuestionsAnswered","setCurrentQuestion","isFinalQuestion","setFinished","map","questionNumber","Object","keys","text","values","toString","questions","data","Content","currentQuestion","finished","questionComponents","q","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a4501ea.chunk.js","sourcesContent":["const Answer = ({\r\n  index,\r\n  selected,\r\n  answer,\r\n  onclick,\r\n  answered,\r\n  isCorrectAnswer,\r\n}: any) => {\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        if (!answered) {\r\n          onclick(index);\r\n        }\r\n      }}\r\n      className={`answer ${index === selected ? \"selected\" : \"\"} ${\r\n        answered\r\n          ? isCorrectAnswer\r\n            ? \"correct-answer\"\r\n            : \"incorrect-answer\"\r\n          : \"\"\r\n      }`}\r\n    >\r\n      {`${answer} ${answered ? (isCorrectAnswer ? \"‚úîÔ∏è\" : \"‚ùå\") : \"\"}`}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Answer;\r\n","import { useState } from \"react\";\r\nimport Answer from \"./Answer\";\r\n\r\ntype Answer = {\r\n  [key: string]: string;\r\n};\r\n\r\ntype Question = {\r\n  question: string;\r\n  answers: any;\r\n  correctAnswer: string;\r\n  feedback: string;\r\n};\r\n\r\ntype QuestionProps = {\r\n  index: number;\r\n  question: string;\r\n  answers: any;\r\n  correctAnswer: string;\r\n  feedback: string;\r\n  setCorrectAnswers: any;\r\n  correctAnswers: number;\r\n  questionsAnswered: number;\r\n  setQuestionsAnswered: any;\r\n  setCurrentQuestion: any;\r\n  isFinalQuestion: boolean;\r\n  setFinished: any;\r\n};\r\n\r\nconst Question = (props: QuestionProps) => {\r\n  const [selected, setSelected] = useState(\"\");\r\n  const [answered, setAnswered] = useState(false);\r\n  const {\r\n    index,\r\n    question,\r\n    answers,\r\n    correctAnswer,\r\n    feedback,\r\n    setCorrectAnswers,\r\n    correctAnswers,\r\n    questionsAnswered,\r\n    setQuestionsAnswered,\r\n    setCurrentQuestion,\r\n    isFinalQuestion,\r\n    setFinished,\r\n  } = props;\r\n  const isCorrectAnswer = selected === correctAnswer;\r\n\r\n  return (\r\n    <div className=\"question\">\r\n      <div className=\"question-number\">Question {index + 1}</div>\r\n      <div className=\"question-title\">{question}</div>\r\n      <div className=\"answers-container\">\r\n        {\" \"}\r\n        {answers.map((answer: Answer, index: number) => {\r\n          const questionNumber = Object.keys(answer)[0];\r\n          const text = Object.values(answer)[0];\r\n          const isCorrectAnswer = questionNumber === correctAnswer;\r\n          return (\r\n            <Answer\r\n              isCorrectAnswer={isCorrectAnswer}\r\n              key={index.toString()}\r\n              index={questionNumber}\r\n              selected={selected}\r\n              answered={answered}\r\n              answer={text}\r\n              onclick={setSelected}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"buttons-container\">\r\n        <div\r\n          className=\"submit\"\r\n          onClick={() => {\r\n            if (!answered && selected) {\r\n              setAnswered(true);\r\n              setQuestionsAnswered(questionsAnswered + 1);\r\n              if (isCorrectAnswer) setCorrectAnswers(correctAnswers + 1);\r\n            }\r\n          }}\r\n        >\r\n          Submit\r\n        </div>\r\n        {answered && !isFinalQuestion && (\r\n          <div className=\"next\" onClick={() => setCurrentQuestion(index + 1)}>\r\n            Next\r\n          </div>\r\n        )}\r\n        {answered && isFinalQuestion && (\r\n          <div onClick={() => setFinished(true)} className=\"finish\">\r\n            Finish\r\n          </div>\r\n        )}\r\n      </div>\r\n      {answered && (\r\n        <div\r\n          className={`feedback ${isCorrectAnswer ? \"correct\" : \"incorrect\"}`}\r\n        >\r\n          {feedback}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import { useState } from \"react\";\r\nimport * as data from \"../questions.json\";\r\nimport Question from \"./Question\";\r\n\r\nconst questions = data.questions;\r\n\r\nconst Content = () => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [questionsAnswered, setQuestionsAnswered] = useState(0);\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n  const [finished, setFinished] = useState(false);\r\n\r\n  const q = questions[currentQuestion];\r\n\r\n  const questionComponents = questions.map((q, index) => {\r\n    const { question, answers, correctAnswer, feedback } = q;\r\n    const isFinalQuestion = index === questions.length - 1;\r\n\r\n    return (\r\n      <Question\r\n        index={index}\r\n        key={index.toString()}\r\n        question={question}\r\n        answers={answers}\r\n        correctAnswer={correctAnswer}\r\n        feedback={feedback}\r\n        setCorrectAnswers={setCorrectAnswers}\r\n        correctAnswers={correctAnswers}\r\n        questionsAnswered={questionsAnswered}\r\n        setQuestionsAnswered={setQuestionsAnswered}\r\n        setCurrentQuestion={setCurrentQuestion}\r\n        isFinalQuestion={isFinalQuestion}\r\n        setFinished={setFinished}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      {!finished && questionComponents[currentQuestion]}\r\n      {finished && (\r\n        <div className=\"finished-container\">\r\n          <div>üôåüôåüôå</div>\r\n          <div>Thank you for your response</div>\r\n          <div>\r\n            You got{\" \"}\r\n            <b>\r\n              {correctAnswers}/{questionsAnswered}\r\n            </b>{\" \"}\r\n            questions correct!\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Content from \"./components/Context\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"content-container\">\n      <Content />\n    </div>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}